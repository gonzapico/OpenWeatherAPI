apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
  defaultPublishConfig "debug"
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion

  defaultConfig {
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode rootProject.ext.versionCode
    versionName rootProject.ext.versionName

    buildConfigField "String", "API_URL", "\"http://api.openweathermap.org/data/2.5/\""
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  packagingOptions {
    exclude 'LICENSE.txt'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/ASL2.0'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/services/javax.annotation.processing.Processor'
  }

  lintOptions {
    quiet true
    abortOnError false
    ignoreWarnings true
    disable 'InvalidPackage'
    disable 'OldTargetApi'
  }

  buildTypes {
    debug {
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

  def appDependencies = rootProject.ext.appDependencies
  def testDependencies = rootProject.ext.testDependencies

  implementation(appDependencies.dagger,
      appDependencies.gson,
      appDependencies.rxJava,
      appDependencies.rxAndroid,
      appDependencies.retrofit,
      appDependencies.retrofitGson,
      appDependencies.retrofitRxAdapter,
      appDependencies.androidAnnotations,

      project(':domain'),)

  testImplementation(testDependencies.junit,
      testDependencies.mockWebServer,
      testDependencies.assertj,
      testDependencies.mockito,)
}
repositories {
  mavenCentral()
}
